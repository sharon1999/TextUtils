{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","title","mode","toggleMode","className","href","type","id","onClick","htmlFor","TextArea","showAlert","useState","text","setText","style","color","backgroundColor","value","onChange","e","target","rows","disabled","length","newText","toUpperCase","toLowerCase","split","filter","element","Alert","props","height","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6bb83e6c.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ title, mode, toggleMode }) => {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${mode} bg-${mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home \r\n                </a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={toggleMode}\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Toggle Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TextArea({ mode, showAlert }) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const changeInput = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Enter text here to analyse</h1>\r\n        <textarea\r\n          style={{ backgroundColor: mode === \"dark\" ? \"grey\" : \"white\" }}\r\n          value={text}\r\n          onChange={changeInput}\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n        <button\r\n          disabled={text.length == 0}\r\n          type=\"button\"\r\n          onClick={handleUpClick}\r\n          className=\"btn btn-primary my-2 mx-1\"\r\n        >\r\n          Upper case\r\n        </button>\r\n        <button\r\n          disabled={text.length == 0}\r\n          type=\"button\"\r\n          onClick={handleLoClick}\r\n          className=\"btn btn-primary my-2 mx-1\"\r\n        >\r\n          Lower case\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h2>Summary of words</h2>\r\n        <p>\r\n          {\r\n            text.split(\"\\s+/\").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }\r\n           words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 *text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}min read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextArea;\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n    }\r\n    return (\r\n        <div  style={{height:'60px'}}>\r\n        {   props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextArea from \"./Components/TextArea\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import About from './Components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const[alert,setAlert] = useState(null)\n\n  const showAlert = (message,type) =>{\n      setAlert ({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode is enabled\",\"success\")     \n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is enabled\",\"success\")\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n          {/* <Route path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route path=\"/\"> */}\n            <TextArea mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n      {/* </Switch> */}\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}